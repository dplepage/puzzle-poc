{"version":3,"sources":["components.tsx","views lazy /^/.//.*$/ groupOptions: {} namespace object","engine/interface.tsx","engine/js_engine.tsx","App.tsx","index.tsx"],"names":["FlexBox","dir","children","opts","display","flexDirection","alignItems","lined","style","GenericRound","data","label","map","item","key","slug","to","solved","answer","React","Component","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","ViewState","can_submit","answers","this","length","join","toUpperCase","ViewStructure","unlocks","load_puzzles","hunt","start","round1","image","round2","round3","puzz1_1","puzz1_2","puzz2_1","puzz2_2","puzz3_1","puzz3_2","is_answer","ans","undefined","HuntState","state","hasOwnProperty","unlocked","hstate","get_state","vstate","push","resolve_round_data","hunt_state","entries","forEach","value","get_vstate","startsWith","JsPuzzleEngine","callback","_version","unlock_restart","result","i","rslug","puzzles","j","r","get_nav","nav_data","nav_entries","s","new_slug","unlock","nocallback","useData","engine","version","useState","setData","setState","useEffect","a","get_data","window","console","log","load_data","PuzzleHeader","vdata","submission","setSubmission","wrong","setWrong","items","has_answers","answer_str","onSubmit","evt","preventDefault","submit","type","placeholder","onChange","target","PuzzleViewFromSlug","useParams","dstate","view","setView","useView","view_module","loading_div","default","App","tmp","setTmp","nav","RenderPuzzleNav","puzzle","indent","width","padding","margin","background","onClick","unlock_all","round","Fragment","maxWidth","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27fd6c4e.chunk.js","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ViewData } from './engine/interface'\n\n// Stupid quick components, for anything real use bootstrap or material ui or\n// maybe get an actual designer to help\n\nexport function Show({data}:{data:any}) {\n  window.console.log(\"SHOW:\", data)\n  return <pre>{JSON.stringify(data, null, 2)}</pre>\n}\n\ntype FlexProps = {\n  dir: \"row\"|\"column\",\n  lined?: boolean\n}\n\nexport const FlexBox:FunctionComponent<FlexProps> = (({dir, children, lined}) => {\n  const opts: React.CSSProperties = {\n    display: \"flex\",\n    flexDirection: dir,\n    alignItems: 'stretch',\n  };\n  if (lined) {\n    opts['border'] = '1px solid black';\n  }\n  return <div style={opts}>\n    {children}\n   </div>\n})\n\nexport function GenericRound({ data, label }: { data: ViewData, label:string }) {\n  return <div>\n    <h1>{label}</h1>\n    <ul>\n      {data.children.map((item: any) =>\n        <li key={item.slug}>\n          <Link to={item.slug}>\n            <label>\n              {item.label}{item.solved ? \" - \" + item.answer : \"\"}\n            </label>\n          </Link>\n        </li>\n      )}\n    </ul>\n  </div>\n}\n\nexport class ErrorBoundary extends React.Component {\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch(error: Error, info: any): void {\n    this.setState({hasError:true})\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <div>\n        <h1>Site Failure</h1>\n        <p>This puzzle has failed to load. This failure is not a puzzle.</p>\n      </div>;\n    }\n    return this.props.children;\n  }\n}\n","var map = {\n\t\"./puzz1_1\": [\n\t\t29,\n\t\t9,\n\t\t0\n\t],\n\t\"./puzz1_1.tsx\": [\n\t\t29,\n\t\t9,\n\t\t0\n\t],\n\t\"./puzz1_2\": [\n\t\t30,\n\t\t9,\n\t\t1\n\t],\n\t\"./puzz1_2.grid.png\": [\n\t\t53,\n\t\t7,\n\t\t11\n\t],\n\t\"./puzz1_2.tsx\": [\n\t\t30,\n\t\t9,\n\t\t1\n\t],\n\t\"./puzz2_1\": [\n\t\t31,\n\t\t9,\n\t\t2\n\t],\n\t\"./puzz2_1.tsx\": [\n\t\t31,\n\t\t9,\n\t\t2\n\t],\n\t\"./puzz2_2\": [\n\t\t32,\n\t\t9,\n\t\t3\n\t],\n\t\"./puzz2_2.tsx\": [\n\t\t32,\n\t\t9,\n\t\t3\n\t],\n\t\"./puzz3_1\": [\n\t\t33,\n\t\t9,\n\t\t4\n\t],\n\t\"./puzz3_1.tsx\": [\n\t\t33,\n\t\t9,\n\t\t4\n\t],\n\t\"./puzz3_2\": [\n\t\t34,\n\t\t9,\n\t\t5\n\t],\n\t\"./puzz3_2.tsx\": [\n\t\t34,\n\t\t9,\n\t\t5\n\t],\n\t\"./round1\": [\n\t\t35,\n\t\t9,\n\t\t6\n\t],\n\t\"./round1.tsx\": [\n\t\t35,\n\t\t9,\n\t\t6\n\t],\n\t\"./round2\": [\n\t\t36,\n\t\t9,\n\t\t7\n\t],\n\t\"./round2.tsx\": [\n\t\t36,\n\t\t9,\n\t\t7\n\t],\n\t\"./round3\": [\n\t\t37,\n\t\t9,\n\t\t8\n\t],\n\t\"./round3.tsx\": [\n\t\t37,\n\t\t9,\n\t\t8\n\t],\n\t\"./start\": [\n\t\t38,\n\t\t9,\n\t\t9\n\t],\n\t\"./start.tsx\": [\n\t\t38,\n\t\t9,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[2]).then(function() {\n\t\treturn __webpack_require__.t(id, ids[1])\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 51;\nmodule.exports = webpackAsyncContext;","export type Slug = string\n\nexport class ViewState {\n  can_submit: boolean\n  answers: string[]\n  constructor(can_submit: boolean) {\n    this.can_submit = can_submit\n    this.answers = []\n  }\n  has_answers() {\n    return this.answers.length > 0\n  }\n  answer_str() {\n    return this.answers.join(\", \").toUpperCase()\n  }\n}\n\nexport interface NavEntry {\n  label: string\n  slug: Slug\n  state: ViewState\n  children: NavEntry[]\n}\n\nexport interface ViewData extends Record<string, any> {\n  label: string,\n  state: ViewState,\n}\n\n\n// To make the actual hunt we'd implement this interface as a wrapper around a\n// server; to make the hunt playable after the fact, we'd reimplement the hunt\n// in pure typescript.\nexport interface PuzzleEngine {\n  submit(slug: Slug, answer: string): Promise<boolean>\n  unlocked(slug: Slug): Promise<boolean>\n  get_data<T>(slug: Slug): Promise<ViewData>\n  get_nav(): Promise<NavEntry[]>\n  version(): number\n}\n\n\nexport interface ViewProps {\n  engine: PuzzleEngine,\n  data: ViewData,\n}\n","import { Slug, ViewState, NavEntry, ViewData, PuzzleEngine } from './interface';\n\ninterface PuzzleState {\n  unlocked: boolean\n  solved: boolean\n  answers: string[]\n}\n\n// Quick hack of a stupidly simple puzzle structure\n\ntype LoadPuzzleData = Record<Slug, any>\ntype VParams = {\n  label: string,\n  unlocks?: string[],\n  answer?: string,\n  load_puzzles?: LoadPuzzleData,\n}\nclass ViewStructure {\n  label: string\n  unlocks: Slug[]\n  answer?: string\n  load_puzzles: LoadPuzzleData\n  constructor({ label, unlocks = [], answer, load_puzzles }:VParams){\n    this.label = label\n    this.unlocks = unlocks\n    this.answer = answer\n    this.load_puzzles = load_puzzles || {};\n  }\n}\n\nconst hunt: Record<Slug, ViewStructure> = {\n  start: new ViewStructure({\n   label: \"The Start\",\n   load_puzzles: {\n     round1: {\n       image: \"/round1.man.png\",\n     },\n     round2: {\n       image: \"/round2.plan.gif\",\n     },\n     round3: {\n       image: \"/round3.canal.jpg\",\n     }\n   },\n  }),\n  round1: new ViewStructure({\n   label: \"The First Round\",\n   load_puzzles: {\n     puzz1_1: {},\n     puzz1_2: {}\n   },\n  }),\n  puzz1_1: new ViewStructure({\n   label: \"Puzzle One\",\n   unlocks: [\"puzz1_2\"],\n  }),\n  puzz1_2: new ViewStructure({\n   label: \"An Image Puzzle\",\n   unlocks: [\"puzz2_1\", \"round2\"],\n   answer: \"VERMILLION\",\n  }),\n  round2: new ViewStructure({\n   label: \"The Second Round\",\n   load_puzzles: {\n     puzz2_1: {},\n     puzz2_2: {}\n   },\n  }),\n  puzz2_1: new ViewStructure({\n   label: \"A Tic-Tac-Toe 'Puzzle'\",\n   unlocks: [\"puzz2_2\"],\n   answer: \"TICTACS\",\n  }),\n  puzz2_2: new ViewStructure({\n   label: \"Another Puzzle Two\",\n   unlocks: [\"puzz3_1\", \"round3\"],\n  }),\n  round3: new ViewStructure({\n   label: \"The Final Round\",\n   load_puzzles: {\n     puzz3_1: {},\n     puzz3_2: {}\n   },\n  }),\n  puzz3_1: new ViewStructure({\n   label: \"The Final Puzzle One\",\n   unlocks: [\"puzz3_2\"],\n  }),\n  puzz3_2: new ViewStructure({\n   label: \"The Final Puzzle Two\",\n  }),\n}\n\nfunction is_answer(slug:Slug, answer:string) {\n  const ans = hunt[slug].answer\n  return (ans === undefined || ans.toUpperCase() === answer.toUpperCase())\n}\n\nclass HuntState {\n  // Whole state of the hunt\n  private state: Record<Slug, PuzzleState>\n  constructor() {\n    this.state = {};\n  }\n  get_state(slug: string):PuzzleState {\n    if (!this.state.hasOwnProperty(slug)) {\n      this.state[slug] = {\n        unlocked: false,\n        solved: false,\n        answers: []\n      }\n    }\n    return this.state[slug];\n  }\n  get_vstate(slug: string): ViewState {\n    const hstate = this.get_state(slug)\n    const vstate = new ViewState(!hstate.solved)\n    if (hstate.solved)\n      vstate.answers.push(...hstate.answers)\n    return vstate\n  }\n}\n\nfunction resolve_round_data(slug: Slug, hunt_state: HuntState): ViewData {\n  // Compute visible data for a given round\n  const children: any[] = []\n  Object.entries(hunt[slug].load_puzzles).forEach(([slug, value]) => {\n    const hstate = hunt_state.get_state(slug)\n    if (hstate.unlocked) {\n      children.push({\n        label: hunt[slug].label,\n        slug: slug,\n        state: hunt_state.get_vstate(slug),\n        ...value,\n      })\n    }\n  });\n  const vstate = hunt_state.get_vstate(slug)\n  // /start doesn't get an answer\n  if (!slug.startsWith(\"round\"))\n    vstate.can_submit = false\n  return {\n    label: hunt[slug].label,\n    state: vstate,\n    children: children\n  }\n}\n\n\nexport class JsPuzzleEngine implements PuzzleEngine {\n  hunt_state: HuntState\n  _version: number\n  callback: (n: number) => void\n  constructor(callback: (n: number) => void) {\n    this.callback = callback\n    this.hunt_state = new HuntState();\n    this._version = 0\n    this.unlock_restart(true)\n  }\n  version() {\n    return this._version\n  }\n  async unlocked(slug: Slug) {\n    if (slug === \"nav\") return true;\n    return this.hunt_state.get_state(slug).unlocked;\n  }\n  private async unlock(slug: Slug) {\n    this.hunt_state.get_state(slug).unlocked = true;\n  }\n  async get_nav() {\n    const result: NavEntry[] = []\n    for (const i of [1, 2, 3]) {\n      const rslug = `round${i}`\n      if (!await this.unlocked(rslug)) continue;\n      const puzzles = []\n      for (const j of [1, 2]) {\n        const slug = `puzz${i}_${j}`\n        if (!await this.unlocked(slug)) continue;\n        puzzles.push({\n          label: hunt[slug].label,\n          slug: slug,\n          state: this.hunt_state.get_vstate(slug),\n          children: []\n        })\n      }\n      const r = {\n        label: hunt[rslug].label,\n        slug: rslug,\n        state: this.hunt_state.get_vstate(rslug),\n        children: puzzles\n      }\n      result.push(r)\n    }\n    return result\n  }\n  async get_data(slug: Slug) {\n    if (slug === 'nav') {\n      // abuse the puzzle data mechanism to get the hack nav data\n      const nav_data = await this.get_nav()\n      return {\n        label: \"N/A\",\n        state: new ViewState(false),\n        nav_entries: nav_data,\n      }\n    }\n    if (slug.startsWith(\"puzz\")) {\n      const s = this.hunt_state.get_vstate(slug)\n      return {\n        label: hunt[slug].label,\n        state: s,\n      };\n    }\n    return resolve_round_data(slug, this.hunt_state);\n  }\n  async submit(slug: Slug, value: string) {\n    if (!is_answer(slug, value))\n      return false\n    const state = this.hunt_state.get_state(slug)\n    state.solved = true;\n    state.answers = [value];\n    hunt[slug].unlocks.forEach(new_slug => this.unlock(new_slug))\n    this.callback(++this._version)\n    return true\n  }\n  unlock_all() {\n    for (const slug of Object.keys(hunt)) {\n      this.unlock(slug)\n    }\n    this.callback(++this._version)\n  }\n  unlock_restart(nocallback?:boolean) {\n    for (const slug of Object.keys(hunt))\n      this.hunt_state.get_state(slug).unlocked = false\n    this.unlock(\"start\")\n    this.unlock(\"round1\")\n    this.unlock(\"puzz1_1\")\n    for (const slug of Object.keys(hunt)) {\n      if (this.hunt_state.get_state(slug).answers.length){\n        this.unlock(slug)\n        hunt[slug].unlocks.forEach(new_slug => this.unlock(new_slug))\n      }\n    }\n    this._version = 0\n    if (!nocallback)\n      this.callback(this._version)\n  }\n}\n","import React, { useState, FunctionComponent, useEffect, FormEvent } from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\nimport { FlexBox } from './components';\nimport { PuzzleEngine, Slug, NavEntry, ViewData } from './engine/interface';\nimport { JsPuzzleEngine } from './engine/js_engine';\n\ntype loadState = \"loading\" | \"404\" | \"loaded\";\n\nfunction useData(engine:PuzzleEngine, slug:Slug, version:number):[ViewData|null, loadState] {\n  // React hook to load the latest data; reloads if you change the slug OR the\n  // version number (thus, data is reloaded when e.g. you submit an answer).\n  // This could probably be merged with useView with fairly minimal effort, this\n  // is just a proof-of-concept.\n  const [data, setData] = useState<ViewData|null>(null);\n  const [state, setState] = useState<loadState>(\"loading\");\n  useEffect(()=>{\n    async function load_data() {\n      setState(\"loading\");\n      const unlocked = await engine.unlocked(slug)\n      if (!unlocked) {\n        setState(\"404\")\n        return\n      }\n      const data = await engine.get_data(slug);\n      window.console.log(`Loaded data for ${slug} at version ${version}`)\n      setData(data)\n      setState(\"loaded\")\n    }\n    load_data();\n  }, [engine, slug, version]);\n  return [data, state];\n}\n\nfunction useView(engine:PuzzleEngine, slug:Slug) {\n  // React hook to load the view for a slug dynamically.\n  // TODO: This doesn't reload on unlocks, so if you go to a puzzle slug before\n  // it's unlocked and then unlock it, it'll still show as a 404 until you\n  // navigate away and back again\n  const [view, setView] = useState<any>(null);\n  const [state, setState] = useState<loadState>(\"loading\");\n  useEffect(()=>{\n    async function load_data() {\n      setState(\"loading\");\n      const unlocked = await engine.unlocked(slug)\n      if (!unlocked) {\n        setState(\"404\")\n        return\n      }\n      const view = await import(/* webpackChunkName: \"[request]\" */ `./views/${slug}`);\n      window.console.log(`Loaded view for ${slug}`)\n      setView(view)\n      setState(\"loaded\")\n    }\n    load_data();\n  }, [engine, slug]);\n  return [view, state];\n}\n\ntype SubmitProps = {slug:string, engine:PuzzleEngine, vdata:ViewData}\nconst PuzzleHeader = ({slug, engine, vdata}:SubmitProps) => {\n  // React Component that shows a puzzle's title and submit bar, or the\n  // answer(s) if the puzzle has been solved already.\n  const state = vdata.state\n  const [submission, setSubmission] = useState(\"\");\n  const [wrong, setWrong] = useState(\"\");\n  const items:React.ReactElement[] = [<h1 key='label'>{vdata.label}</h1>];\n  if (state.has_answers()) {\n    items.push(<b key='answer'>Answer: {state.answer_str()}</b>)\n  }\n  if (state.can_submit) {\n    const onSubmit = (evt:FormEvent) => {\n      evt.preventDefault();\n      engine.submit(slug, submission).then((result)=>{\n        if (result) {\n          setWrong(\"\")\n        } else {\n          setWrong(submission)\n        }\n      });\n      setSubmission(\"\");\n    }\n    items.push(<form onSubmit={onSubmit} key='submit'>\n      <input\n        type=\"text\"\n        placeholder=\"Enter anything\"\n        value={submission}\n        onChange={e=>setSubmission(e.target.value)}\n      />\n      <input type=\"submit\" value=\"Submit\" />\n    </form>)\n    if (wrong !== \"\") {\n      items.push(<b key='wrong'>{wrong.toUpperCase()} is INCORRECT</b>)\n    }\n  }\n  return <div>{items}</div>\n}\n\nexport const PuzzleViewFromSlug:FunctionComponent<{engine:PuzzleEngine, version:number}> = ({engine, version}) => {\n  // React component that renders a puzzle from a slug parameter. This is\n  // intended for use with a Router, which is why it gets the slug from\n  // useParams instead of as an argument.\n  const { slug } = useParams<{ slug: Slug }>()\n  const [data, dstate] = useData(engine, slug, version);\n  const [view_module, vstate] = useView(engine, slug);\n  const loading_div = <div>Loading...</div>\n  if (dstate === \"404\" || vstate === \"404\")\n    return <b>404 - there's nothing here (or you haven't unlocked it yet!)</b>\n  if (data === null || vstate === \"loading\"){\n    return loading_div\n  }\n  return <>\n    <PuzzleHeader slug={slug} engine={engine} vdata={data}/>\n    <view_module.default data={data} engine={engine}/>\n   </>\n}\n\nfunction App() {\n  const [tmp, setTmp] = useState(0)\n  const [engine] = useState(new JsPuzzleEngine(setTmp));\n  const [nav_data] = useData(engine, \"nav\", tmp);\n  if (nav_data === null)\n    return <div>Loading...</div>\n  const nav:NavEntry[] = nav_data.nav_entries\n\n  const RenderPuzzleNav: FunctionComponent<{puzzle:ViewData, indent?:boolean}> = ({puzzle, indent}) => {\n    let label = puzzle.label\n    if (puzzle.state.has_answers())\n      label += ' - '+puzzle.state.answer_str()\n    if (indent)\n      label = '> '+label\n    return <Link to={`/hunt/${puzzle.slug}`}>\n      {label}\n    </Link>\n  }\n\n  return (\n    <Router>\n      <FlexBox dir=\"row\">\n        <Link to=\"/\">Home</Link>&nbsp;\n        <Link to=\"/about\">About</Link>&nbsp;\n        <Link to=\"/hunt/start\">Hunt</Link>\n      </FlexBox>\n      <FlexBox dir=\"row\">\n        <div style={{width:\"200px\", padding:\"10px\", margin:\"10px\", background:\"lightgrey\"}}>\n          <h3>Hack Navigation</h3>\n          <button onClick={()=>engine.unlock_all()}>Unlock all</button>\n          <button onClick={()=>engine.unlock_restart()}>Relock unsolved</button>\n          <FlexBox dir=\"column\">\n            <Link to=\"/hunt/start\">Start</Link>\n            {nav.map((round)=> <React.Fragment key={`nav-${round.slug}`}>\n              <RenderPuzzleNav puzzle={round}/>\n              {round.children.map((puzzle)=>\n                <span key={`nav-${puzzle.slug}`}>\n                  <RenderPuzzleNav puzzle={puzzle} indent/>\n                </span>\n                )}\n                <hr/>\n              </React.Fragment>\n            )}\n          </FlexBox>\n        </div>\n        <div style={{maxWidth:\"600px\"}}>\n          <Switch>\n            <Route path=\"/about\">\n              <h2> About This Hunt </h2>\n              How about this hunt, eh?\n            </Route>\n            <Route path=\"/hunt/:slug\">\n              <PuzzleViewFromSlug engine={engine} version={tmp}/>\n            </Route>\n            <Route path=\"/\">\n              <h2>Welcome to the hunt!</h2>\n              <p>\n              This is a proof-of-concept of using react as a hunt engine. You\n              can select \"Hunt\" in the top navbar (or \"start\" in the hack bar on\n              the side) to see the start of the hunt. Click \"Unlock all\" or\n              \"Relock unsolve\" to auto-unlock/relock all puzzles and rounds.\n              </p>\n              <p>\n              The basic idea was to see if we could make a hunt that lazy-loaded\n              puzzle data aggressively enough that a determined hacker couldn't\n              even deduce the existence of locked puzzles, while still allowing\n              a React-style single-page app. As a bonus, this format would also\n              allow the hunt to be run normally, with unlocks and everything,\n              after the official hunt was over, by reimplementing the unlock\n              logic in javascript and storing the hunt state as a cookie. To that end, this prototype defines an\n              interface in engine/interface.tsx that is the abstract of what a\n              server would need to provide, and then a JS implementation of this\n              in engine/js_engine.tsx so that you can run the hunt right here in\n              your browser.\n              </p>\n              <p>\n              I didn't bother actually implementing cookie storage, so right now\n              the hunt state will reset any time you reload the page.\n              </p>\n              <p>\n              It's not a real hunt, obviously - none of the puzzles are actually\n              puzzles, and most of them will just accept any answer you provide\n              as the right one.\n              </p>\n\n\n            </Route>\n          </Switch>\n        </div>\n      </FlexBox>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}